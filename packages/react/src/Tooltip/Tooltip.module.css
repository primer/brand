.Tooltip {
  display: none;
}

@media (forced-colors: active) {
  .Tooltip {
    outline: var(--brand-borderWidth-thin) solid transparent;
  }
}

/* Overriding the default popover styles */
.Tooltip[popover] {
  --offset: var(
    --base-size-8,
    --base-size-8
  ); /* This is a "magic number". Just gives some room to make sure the tooltip stay open when mouse leaves the trigger to hover tooltip */
  /* these vars are for the triangle, via https://www.smashingmagazine.com/2024/03/modern-css-tooltips-speech-bubbles-part1/ */
  --b: 1em; /* triangle base width */
  --h: 0.5em; /* triangle height */
  --p: 50%; /* center triangle position (0%:left 100%:right) */
  --r: var(--brand-borderRadius-medium); /* border radius */
  --c: var(--brand-color-neutral-emphasisPlus); /* bg color */

  position: absolute;
  padding: 0.5em 0.75em;
  width: max-content;
  margin: auto;
  clip: auto;
  white-space: normal;
  font: normal normal var(--brand-text-size-100) / var(--brand-text-lineHeight-100) var(--brand-fontStack-sansSerif);
  -webkit-font-smoothing: subpixel-antialiased;
  color: var(--brand-Tooltip-color-default);
  text-align: center;
  word-wrap: break-word;
  background: var(--c);
  border-radius: var(--r);
  border: 0;
  opacity: 0;
  max-width: 250px;
  inset: auto;
  /* for scrollbar */
  overflow: visible;
}

.Tooltip[popover]:popover-open, /* selector in chrome is :popover-open */
.Tooltip[popover].\:popover-open {
  /* selector in firefox and safari is \:popover-open */
  display: block;
  animation-name: tooltip-appear;
  animation-duration: var(--brand-animation-duration-faster, 0.2s);
  animation-fill-mode: forwards;
  animation-timing-function: ease-in;
  animation-delay: 0s;
}

/* This is needed to keep the tooltip open when the user leaves the trigger element to hover tooltip */
.Tooltip::after {
  position: absolute;
  display: block;
  right: 0;
  left: 0;
  height: var(--offset);
  content: '';
}

/* Directional styles */
.Tooltip[data-direction='n'] {
  border-image: conic-gradient(var(--c) 0 0) fill 0 / var(--r) calc(100% - var(--p) - var(--b) / 2) 0
    calc(var(--p) - var(--b) / 2) / 0 0 var(--h) 0;
  clip-path: polygon(
    0 100%,
    0 0,
    100% 0,
    100% 100%,
    min(100%, var(--p) + var(--b) / 2) 100%,
    var(--p) calc(100% + var(--h)),
    max(0%, var(--p) - var(--b) / 2) 100%
  );
}

.Tooltip[data-direction='s'] {
  border-image: conic-gradient(var(--c) 0 0) fill 0/ 0 calc(100% - var(--p) - var(--b) / 2) var(--r) calc(
      var(--p) - var(--b) / 2
    ) / var(--h) 0 0 0;
  clip-path: polygon(
    0 0,
    0 100%,
    100% 100%,
    100% 0,
    min(100%, var(--p) + var(--b) / 2) 0,
    var(--p) calc(-1 * var(--h)),
    max(0%, var(--p) - var(--b) / 2) 0
  );
}

.Tooltip[data-direction='w'] {
  border-image: conic-gradient(var(--c) 0 0) fill 0 / calc(var(--p) - var(--b) / 2) 0
    calc(100% - var(--p) - var(--b) / 2) var(--r) / 0 var(--h) 0 0;
  clip-path: polygon(
    100% 100%,
    0 100%,
    0 0,
    100% 0,
    100% max(0%, var(--p) - var(--b) / 2),
    calc(100% + var(--h)) var(--p),
    100% min(100%, var(--p) + var(--b) / 2)
  );
}

.Tooltip[data-direction='e'] {
  border-image: conic-gradient(var(--c) 0 0) fill 0 / calc(var(--p) - var(--b) / 2) var(--r)
    calc(100% - var(--p) - var(--b) / 2) 0/ 0 0 0 var(--h);
  clip-path: polygon(
    0 100%,
    100% 100%,
    100% 0,
    0 0,
    0 max(0%, var(--p) - var(--b) / 2),
    calc(-1 * var(--h)) var(--p),
    0 min(100%, var(--p) + var(--b) / 2)
  );
}

.Tooltip[data-direction='n']::after {
  top: 100%;
}

.Tooltip[data-direction='s']::after {
  bottom: 100%;
}

.Tooltip[data-direction='w']::after {
  position: absolute;
  display: block;
  height: 100%;
  width: var(--offset);
  content: '';
  bottom: 0;
  left: 100%;
}

.Tooltip[data-direction='e']::after {
  position: absolute;
  display: block;
  height: 100%;
  width: var(--offset);
  content: '';
  bottom: 0;
  right: 100%;
  margin-left: calc(var(--offset) * -1px);
}

@keyframes tooltip-appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

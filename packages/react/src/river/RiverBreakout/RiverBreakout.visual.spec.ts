/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: RiverBreakout', () => {
  test('RiverBreakout / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-riverbreakout--default&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Default (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-riverbreakout--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Default (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-riverbreakout--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Default (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-riverbreakout--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Default (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-riverbreakout--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Default (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-riverbreakout--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Highlighted Portion (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-riverbreakout--highlighted-portion&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('RiverBreakout / Without Trailing Component (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-riverbreakout--without-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })
})

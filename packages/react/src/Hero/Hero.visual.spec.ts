/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: Hero', () => {
  test('Hero / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero--default&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Default (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Default (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Default (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Default (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Default (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero-features--centered&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Centered (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Muted Descriptions (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-muted-descriptions&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Accent Button (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-accent-button&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom) (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom) (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom) (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom) (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (left + bottom) (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-image-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom) (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom) (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom) (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom) (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (centered + bottom) (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-image-block-end-center&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right) (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right) (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right) (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right) (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With an image (right) (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-image-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom) (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom) (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom) (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom) (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (bottom) (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-video-block-end-default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right) (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right) (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right) (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right) (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With a VideoPlayer (right) (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-video-inline-end&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Without Description (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--without-description&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Secondary Action (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-secondary-action&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero-features--codespaces&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--codespaces&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--codespaces&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--codespaces&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--codespaces&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Codespaces (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--codespaces&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero-features--issues&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--issues&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--issues&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--issues&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--issues&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Issues (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--issues&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Trailing Component (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-trailing-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Classnames (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-custom-classnames&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With Custom Heading And Description Sizes (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-custom-heading-and-description-sizes&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / With custom icon and variant (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--with-custom-icon-and-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  // eslint-disable-next-line i18n-text/no-en
  test.describe('Mobile viewport test for Narrow View', () => {
    test.use({viewport: {width: 360, height: 800}})
    test('Hero / Narrow View', async ({page}) => {
      await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero-features--narrow-view&viewMode=story')

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View (fr)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--narrow-view&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View (de)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--narrow-view&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View (ja)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--narrow-view&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View (es)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--narrow-view&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View (pt-BR)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--narrow-view&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })
  })

  // eslint-disable-next-line i18n-text/no-en
  test.describe('Mobile viewport test for Narrow View Centered', () => {
    test.use({viewport: {width: 360, height: 800}})
    test('Hero / Narrow View Centered', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View Centered (fr)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View Centered (de)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View Centered (ja)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View Centered (es)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Hero / Narrow View Centered (pt-BR)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--narrow-view-centered&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })
  })
  test('Hero / Eyebrow', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-hero-features--eyebrow&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--eyebrow&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--eyebrow&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--eyebrow&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--eyebrow&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--eyebrow&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Hero / Eyebrow Centered (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-hero-features--eyebrow-centered&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })
})

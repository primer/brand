/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: Text', () => {
  test('Text / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--default&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Playground', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--playground&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Scale', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--scale&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Override Weight', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--override-weight&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Override Weight Responsive', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-text--override-weight-responsive&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Composition', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--composition&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Alignment', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--alignment&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Mona Sans', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--mona-sans&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('Text / Hubot Sans', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-text--hubot-sans&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })
})

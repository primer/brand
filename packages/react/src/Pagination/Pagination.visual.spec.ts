/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: Pagination', () => {
  test('Pagination / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-pagination--default&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Playground', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-pagination--playground&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Larger Page Count Margin', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Hide Page Numbers', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  // eslint-disable-next-line i18n-text/no-en
  test.describe('Mobile viewport test for Narrow Page Numbers Hidden By Default', () => {
    test.use({viewport: {width: 360, height: 800}})
    test('Pagination / Narrow Page Numbers Hidden By Default', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
    })
  })
  test('Pagination / Hide Page Numbers By Viewport', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--hide-page-numbers-by-viewport&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Higher Surrounding Page Count', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Page Handlers', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })

  test('Pagination / Custom Attribute Forwarding', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot({fullPage: true})).toMatchSnapshot()
  })
})

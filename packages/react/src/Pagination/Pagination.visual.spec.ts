/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: Pagination', () => {
  test('Pagination / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-pagination--default&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Default (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Default (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Default (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Default (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Default (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-pagination--playground&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Playground (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Larger Page Count Margin (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--larger-page-count-margin&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Hide Page Numbers (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--hide-page-numbers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  // eslint-disable-next-line i18n-text/no-en
  test.describe('Mobile viewport test for Narrow Page Numbers Hidden By Default', () => {
    test.use({viewport: {width: 360, height: 800}})
    test('Pagination / Narrow Page Numbers Hidden By Default', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Pagination / Narrow Page Numbers Hidden By Default (fr)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Pagination / Narrow Page Numbers Hidden By Default (de)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Pagination / Narrow Page Numbers Hidden By Default (ja)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Pagination / Narrow Page Numbers Hidden By Default (es)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })

    test('Pagination / Narrow Page Numbers Hidden By Default (pt-BR)', async ({page}) => {
      await page.goto(
        'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--narrow-page-numbers-hidden-by-default&viewMode=story',
      )

      await page.waitForTimeout(500)
      await expect(page).toHaveScreenshot({fullPage: true})
    })
  })
  test('Pagination / Higher Surrounding Page Count', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Higher Surrounding Page Count (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Higher Surrounding Page Count (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Higher Surrounding Page Count (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Higher Surrounding Page Count (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Higher Surrounding Page Count (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--higher-surrounding-page-count&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Page Handlers (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--page-handlers&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('Pagination / Custom Attribute Forwarding (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-pagination-features--custom-attribute-forwarding&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })
})

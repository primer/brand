/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: PricingOptions', () => {
  test('PricingOptions / Default Variant', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--default-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Cards Variant', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--cards-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / One Option', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--one-option&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Leading Component', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--leading-component&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Two Options', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--two-options&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Three Options', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--three-options&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Dark Color Mode', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--dark-color-mode&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / With Feature Sets', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--with-feature-sets&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / With Included And Excluded Features', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--with-included-and-excluded-features&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Without Features', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-pricingoptions-features--without-features&viewMode=story',
    )

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })

  test('PricingOptions / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-pricingoptions--default&viewMode=story')

    await page.waitForTimeout(500)
    expect(await page.screenshot()).toMatchSnapshot()
  })
})

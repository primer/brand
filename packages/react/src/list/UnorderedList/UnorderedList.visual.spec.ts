/*
 * Do not modify this file directly.
 * This file was generated by: playwright.generate-tests.ts.
 * Regenerate using: npm run test:visual:generate
 */
import {test, expect} from '@playwright/test'

// eslint-disable-next-line i18n-text/no-en
test.describe('Visual Comparison: UnorderedList', () => {
  test('UnorderedList / Default', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-unorderedlist--default&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Default (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Default (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Default (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Default (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Default (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist--default&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground', async ({page}) => {
    await page.goto('http://localhost:6006/iframe.html?args=&id=components-unorderedlist--playground&viewMode=story')

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Playground (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist--playground&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Check List (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist-features--check-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / X List (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist-features--x-list&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Color (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist-features--custom-color&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Custom Icon (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist-features--custom-icon&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant (fr)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Afr&args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant (de)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Ade&args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant (ja)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aja&args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant (es)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Aes&args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })

  test('UnorderedList / Text Variant (pt-BR)', async ({page}) => {
    await page.goto(
      'http://localhost:6006/iframe.html?globals=locale%3Apt-BR&args=&id=components-unorderedlist-features--text-variant&viewMode=story',
    )

    await page.waitForTimeout(500)
    await expect(page).toHaveScreenshot({fullPage: true})
  })
})

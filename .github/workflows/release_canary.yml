name: Release

on:
  push:
    branches-ignore:
      - main
      - next-minor
      - 'changeset-release/main'

jobs:
  release-canary:
    if: ${{ github.repository == 'primer/brand' }}
    name: Canary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:lib

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      - name: Publish canary release
        run: |
          npm exec --workspaces -- ../../packages/repo-configs/scripts/prepare-canary
          yarn changeset publish --tag canary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output canary version
        uses: actions/github-script@v4.0.2
        with:
          script: |
            const paths = ['react', 'design-tokens'].forEach((path) => {
              const package = require(`${process.env.GITHUB_WORKSPACE}/packages/${path}/package.json`)
              github.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                state: 'success',
                context: `Published ${package.name}`,
                description: package.version,
                target_url: `https://unpkg.com/${package.name}@${package.version}/`
              })
            })
